{
    "sourceFile": "lib/main.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1746622154540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746622204364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,14 @@\n   // This widget is the root of your application.\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n+      initialRoute: '/',\r\n+      routes: {\r\n+        '/': (context) => const MyHomePage(),\r\n+        // Add other routes here if needed\r\n+      },\r\n+      debugShowCheckedModeBanner: false,\r\n       title: 'Flutter Demo',\r\n       theme: ThemeData(\r\n         // This is the theme of your application.\r\n         //\r\n"
                },
                {
                    "date": 1746622214710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+import 'package:flutter/material.dart';\r\n+\r\n+void main() {\r\n+  runApp(const MyApp());\r\n+}\r\n+\r\n+class MyApp extends StatelessWidget {\r\n+  const MyApp({super.key});\r\n+\r\n+  // This widget is the root of your application.\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return MaterialApp(\r\n+      initialRoute: '/',\r\n+      routes: {\r\n+        // '/': (context) => const MyHomePage(),\r\n+        // Add other routes here if needed\r\n+      },\r\n+      debugShowCheckedModeBanner: false,\r\n+      title: 'Flutter Demo',\r\n+      theme: ThemeData(\r\n+        // This is the theme of your application.\r\n+        //\r\n+        // TRY THIS: Try running your application with \"flutter run\". You'll see\r\n+        // the application has a purple toolbar. Then, without quitting the app,\r\n+        // try changing the seedColor in the colorScheme below to Colors.green\r\n+        // and then invoke \"hot reload\" (save your changes or press the \"hot\r\n+        // reload\" button in a Flutter-supported IDE, or press \"r\" if you used\r\n+        // the command line to start the app).\r\n+        //\r\n+        // Notice that the counter didn't reset back to zero; the application\r\n+        // state is not lost during the reload. To reset the state, use hot\r\n+        // restart instead.\r\n+        //\r\n+        // This works for code too, not just values: Most code changes can be\r\n+        // tested with just a hot reload.\r\n+        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\r\n+        useMaterial3: true,\r\n+      ),\r\n+      home: Scaffold(\r\n+        appBar: AppBar(\r\n+          title: const Text('Flutter Demo Home Page'),\r\n+        ),\r\n+        body: const Center(\r\n+          child: Text('Hello World!'),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1746622234930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n       initialRoute: '/',\r\n       routes: {\r\n-        // '/': (context) => const MyHomePage(),\r\n+        '/': (context) => const (),\r\n         // Add other routes here if needed\r\n       },\r\n       debugShowCheckedModeBanner: false,\r\n       title: 'Flutter Demo',\r\n"
                },
                {
                    "date": 1746622266491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+import 'package:drawing/splash/splash_screen.dart';\r\n+import 'package:flutter/material.dart';\r\n+\r\n+void main() {\r\n+  runApp(const MyApp());\r\n+}\r\n+\r\n+class MyApp extends StatelessWidget {\r\n+  const MyApp({super.key});\r\n+\r\n+  // This widget is the root of your application.\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return MaterialApp(\r\n+      initialRoute: '/',\r\n+      routes: {\r\n+        '/': (context) => const SplashScreen(),\r\n+        // Add other routes here if needed\r\n+      },\r\n+      debugShowCheckedModeBanner: false,\r\n+      title: 'Flutter Demo',\r\n+      theme: ThemeData(\r\n+        // This is the theme of your application.\r\n+        //\r\n+        // TRY THIS: Try running your application with \"flutter run\". You'll see\r\n+        // the application has a purple toolbar. Then, without quitting the app,\r\n+        // try changing the seedColor in the colorScheme below to Colors.green\r\n+        // and then invoke \"hot reload\" (save your changes or press the \"hot\r\n+        // reload\" button in a Flutter-supported IDE, or press \"r\" if you used\r\n+        // the command line to start the app).\r\n+        //\r\n+        // Notice that the counter didn't reset back to zero; the application\r\n+        // state is not lost during the reload. To reset the state, use hot\r\n+        // restart instead.\r\n+        //\r\n+        // This works for code too, not just values: Most code changes can be\r\n+        // tested with just a hot reload.\r\n+        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\r\n+        useMaterial3: true,\r\n+      ),\r\n+      home: Scaffold(\r\n+        appBar: AppBar(\r\n+          title: const Text('Flutter Demo Home Page'),\r\n+        ),\r\n+        body: const Center(\r\n+          child: Text('Hello World!'),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1746622351043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import 'package:drawing/home/home_screen.dart';\r\n import 'package:drawing/splash/splash_screen.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n void main() {\r\n@@ -14,8 +15,9 @@\n     return MaterialApp(\r\n       initialRoute: '/',\r\n       routes: {\r\n         '/': (context) => const SplashScreen(),\r\n+        '/home': (context) => const HomeScreen(),\r\n       },\r\n       debugShowCheckedModeBanner: false,\r\n       title: 'Flutter Demo',\r\n       theme: ThemeData(\r\n"
                },
                {
                    "date": 1746622383266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,5 +44,11 @@\n       home: Scaffold(\r\n         appBar: AppBar(\r\n           title: const Text('Flutter Demo Home Page'),\r\n         ),\r\n-       \n\\ No newline at end of file\n+        body: const Center(\r\n+          child: Text('Hello World!'),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                }
            ],
            "date": 1746622154539,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\n\r\nvoid main() {\r\n  runApp(const MyApp());\r\n}\r\n\r\nclass MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n        // This is the theme of your application.\r\n        //\r\n        // TRY THIS: Try running your application with \"flutter run\". You'll see\r\n        // the application has a purple toolbar. Then, without quitting the app,\r\n        // try changing the seedColor in the colorScheme below to Colors.green\r\n        // and then invoke \"hot reload\" (save your changes or press the \"hot\r\n        // reload\" button in a Flutter-supported IDE, or press \"r\" if you used\r\n        // the command line to start the app).\r\n        //\r\n        // Notice that the counter didn't reset back to zero; the application\r\n        // state is not lost during the reload. To reset the state, use hot\r\n        // restart instead.\r\n        //\r\n        // This works for code too, not just values: Most code changes can be\r\n        // tested with just a hot reload.\r\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\r\n        useMaterial3: true,\r\n      ),\r\n      home:Scaffold(\r\n        appBar: AppBar(\r\n          title: const Text('Flutter Demo Home Page'),\r\n        ),\r\n        body: const Center(\r\n          child: Text('Hello World!'),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n"
        }
    ]
}